name: Release

on:
  push:
    branches:
      - pollination-release

defaults:
  run:
    shell: bash

jobs:
  build-linux-amd64:
    name: Build & push linux/amd64
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        platform: [ linux/amd64 ]
        target: [ workflow-controller, argocli, argoexec ]
    steps:
      - uses: actions/checkout@v2

      - id: setup
        run: echo "::set-output name=short-sha::${GITHUB_SHA::7}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.platform }}-${{ matrix.target }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}-${{ matrix.target }}-buildx-

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx
        env:
          DOCKERIO_ORG: ${{ secrets.DOCKERIO_ORG }}
          PLATFORM: ${{ matrix.platform }}
          TARGET: ${{ matrix.target }}
          SHORT_SHA: ${{ steps.setup.outputs.short-sha }}
        run: |
          tag=${SHORT_SHA:?}

          tag_suffix=$(echo $PLATFORM | sed -r "s/\//-/g")
          image_name="${DOCKERIO_ORG}/${TARGET}:${tag}-${tag_suffix}"

          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --output "type=image,push=true" \
            --platform="${PLATFORM}" \
            --target $TARGET \
            --tag $image_name .

  push-linux-amd64-images:
    name: Push manifest with linux/amd64
    runs-on: ubuntu-20.04
    needs: [ build-linux-amd64 ]
    steps:
      - uses: actions/checkout@v2

      - id: setup
        run: echo "::set-output name=short-sha::${GITHUB_SHA::7}"

      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Multiarch Image
        env:
          DOCKERIO_ORG: ${{ secrets.DOCKERIO_ORG }}
          SHORT_SHA: ${{ steps.setup.outputs.short-sha }}
        run: |
          echo $(jq -c '. + { "experimental": "enabled" }' ${DOCKER_CONFIG}/config.json) > ${DOCKER_CONFIG}/config.json

          docker_org=$DOCKERIO_ORG

          tag=${SHORT_SHA:?}

          targets="workflow-controller argoexec argocli"
          for target in $targets; do
            image_name="${docker_org}/${target}:${tag}"

            docker manifest create $image_name ${image_name}-linux-amd64

            docker manifest push $image_name
          done
